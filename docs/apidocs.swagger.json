{
  "swagger": "2.0",
  "info": {
    "title": "proto/dv/v1/iq.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VerificationService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/verify": {
      "post": {
        "summary": "Verifies a document (one sided or two sided)",
        "operationId": "VerificationService_VerifyDocument",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerificationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerificationRequest"
            }
          }
        ],
        "tags": [
          "VerificationService"
        ]
      }
    }
  },
  "definitions": {
    "DigitalTemperingCheckLevel": {
      "type": "string",
      "enum": [
        "NOT_DETECTED",
        "LIKELY",
        "CONFIRMED"
      ],
      "default": "NOT_DETECTED",
      "description": "- NOT_DETECTED: Digital tampering not detected\n - LIKELY: There are evidences of digital tampering\n - CONFIRMED: There are strong evidences of digital tampering",
      "title": "Digital tampering level indicates how confident we are that the image\nhas been tampered using some kind of software"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1BarcodeCheck": {
      "type": "object",
      "properties": {
        "missing": {
          "type": "boolean",
          "title": "Barcode is required but missing"
        },
        "hasAnomalies": {
          "type": "boolean",
          "title": "Anomalies detected in the barcode present on the document. This indicates serious validity issues with the document"
        }
      },
      "title": "Checks for the document barcode"
    },
    "v1BlurConfidenceLevel": {
      "type": "string",
      "enum": [
        "BLUR_CONFIDENCE_LEVEL_NO_BLUR",
        "BLUR_CONFIDENCE_LEVEL_1",
        "BLUR_CONFIDENCE_LEVEL_2",
        "BLUR_CONFIDENCE_LEVEL_3",
        "BLUR_CONFIDENCE_LEVEL_4",
        "BLUR_CONFIDENCE_LEVEL_5",
        "BLUR_CONFIDENCE_LEVEL_6",
        "BLUR_CONFIDENCE_LEVEL_7"
      ],
      "default": "BLUR_CONFIDENCE_LEVEL_NO_BLUR",
      "description": "- BLUR_CONFIDENCE_LEVEL_NO_BLUR: BLUR_CONFIDENCE_LEVEL_NO_BLUR - model is confident that there is minimal or no blur in the document image\n - BLUR_CONFIDENCE_LEVEL_1: BLUR_CONFIDENCE_LEVEL_1 - (and all levels above) can be interpreted as \"blur\"\n - BLUR_CONFIDENCE_LEVEL_2: BLUR_CONFIDENCE_LEVEL_2\n - BLUR_CONFIDENCE_LEVEL_3: BLUR_CONFIDENCE_LEVEL_3\n - BLUR_CONFIDENCE_LEVEL_4: BLUR_CONFIDENCE_LEVEL_4\n - BLUR_CONFIDENCE_LEVEL_5: BLUR_CONFIDENCE_LEVEL_5\n - BLUR_CONFIDENCE_LEVEL_6: BLUR_CONFIDENCE_LEVEL_6\n - BLUR_CONFIDENCE_LEVEL_7: BLUR_CONFIDENCE_LEVEL_7",
      "title": "Blur Confidence Level Enum"
    },
    "v1Checks": {
      "type": "object",
      "properties": {
        "formatCheck": {
          "title": "Indicates that field content has unexpected format",
          "allOf": [
            {
              "$ref": "#/definitions/v1FormatCheck"
            }
          ]
        },
        "barcodeMatch": {
          "title": "Indicates whether the read field content matches the value in the document barcode",
          "allOf": [
            {
              "$ref": "#/definitions/v1MatchCheck"
            }
          ]
        },
        "mrzMatch": {
          "title": "Indicates whether the read field content matches the value in the document MRZ",
          "allOf": [
            {
              "$ref": "#/definitions/v1MatchCheck"
            }
          ]
        },
        "mandatoryFieldMissing": {
          "type": "boolean",
          "title": "Set to true if a field is \"mandatory\" but is missing"
        }
      }
    },
    "v1DataCheck": {
      "type": "object",
      "properties": {
        "fields": {
          "title": "All checks performed for fields",
          "allOf": [
            {
              "$ref": "#/definitions/v1FieldChecks"
            }
          ]
        },
        "dates": {
          "title": "Checks that dates on the document are valid",
          "allOf": [
            {
              "$ref": "#/definitions/v1DateFieldsCheck"
            }
          ]
        },
        "mrz": {
          "title": "Checks that MRZ is valid",
          "allOf": [
            {
              "$ref": "#/definitions/v1MrzCheck"
            }
          ]
        },
        "barcode": {
          "title": "Checks that the document barcode is valid",
          "allOf": [
            {
              "$ref": "#/definitions/v1BarcodeCheck"
            }
          ]
        }
      },
      "title": "Result of performing various data consistency and validity checks"
    },
    "v1DateFieldCheck": {
      "type": "object",
      "properties": {
        "type": {
          "title": "The type of the date field",
          "allOf": [
            {
              "$ref": "#/definitions/v1DateFieldType"
            }
          ]
        },
        "checks": {
          "title": "The checks for the date field",
          "allOf": [
            {
              "$ref": "#/definitions/v1Checks"
            }
          ]
        }
      }
    },
    "v1DateFieldType": {
      "type": "string",
      "enum": [
        "TYPE_DATE_OF_BIRTH",
        "TYPE_ISSUE_DATE",
        "TYPE_EXPIRY_DATE",
        "TYPE_CLASS_EFFECTIVE_DATE",
        "TYPE_CLASS_EXPIRY_DATE"
      ],
      "default": "TYPE_DATE_OF_BIRTH",
      "description": "- TYPE_DATE_OF_BIRTH: Date of birth\n - TYPE_ISSUE_DATE: Document issue date\n - TYPE_EXPIRY_DATE: Document expiry date\n - TYPE_CLASS_EFFECTIVE_DATE: Class effective date. Only for some of Australian document types that define \"classes\"\n - TYPE_CLASS_EXPIRY_DATE: Class expiry date. Only for some of Australian document types that define \"classes\"",
      "title": "Type - an enum specifying date field types"
    },
    "v1DateFieldsCheck": {
      "type": "object",
      "properties": {
        "notValid": {
          "type": "boolean",
          "title": "True if date documents on the document are irregular, meaning document is likely not valid"
        },
        "reason": {
          "type": "string",
          "title": "Descriptive error message"
        }
      },
      "title": "Result of performing checks on validity of date fields. Etc, date of expiry is passed and similar\nAll these checks, if present, indicate serious validity issues with the document"
    },
    "v1DigitalTemperingCheck": {
      "type": "object",
      "properties": {
        "level": {
          "title": "Digital tampering level",
          "allOf": [
            {
              "$ref": "#/definitions/DigitalTemperingCheckLevel"
            }
          ]
        }
      },
      "title": "Result of performing checks for digital tampering"
    },
    "v1FieldChecks": {
      "type": "object",
      "properties": {
        "textFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TextFieldCheck"
          },
          "title": "Checks result for text fields"
        },
        "dateFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DateFieldCheck"
          },
          "title": "Checks result for date fields"
        },
        "visualFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1VisualFieldCheck"
          },
          "title": "Checks result for visual fields"
        },
        "sexField": {
          "title": "Checks result for sex field",
          "allOf": [
            {
              "$ref": "#/definitions/v1Checks"
            }
          ]
        }
      }
    },
    "v1FormatCheck": {
      "type": "string",
      "enum": [
        "FORMAT_CHECK_NOT_PERFORMED",
        "FORMAT_CHECK_INVALID",
        "FORMAT_CHECK_VALID"
      ],
      "default": "FORMAT_CHECK_NOT_PERFORMED",
      "description": "- FORMAT_CHECK_NOT_PERFORMED: FORMAT_CHECK_NOT_PERFORMED means that the format check was not performed\n - FORMAT_CHECK_INVALID: FORMAT_CHECK_INVALID format check was performed and was invalid\n - FORMAT_CHECK_VALID: FORMAT_CHECK_VALID format check was performed and was valid",
      "title": "FormatCheck enum"
    },
    "v1GlareConfidenceLevel": {
      "type": "string",
      "enum": [
        "GLARE_CONFIDENCE_LEVEL_NO_GLARE",
        "GLARE_CONFIDENCE_LEVEL_1",
        "GLARE_CONFIDENCE_LEVEL_2",
        "GLARE_CONFIDENCE_LEVEL_3",
        "GLARE_CONFIDENCE_LEVEL_4",
        "GLARE_CONFIDENCE_LEVEL_5",
        "GLARE_CONFIDENCE_LEVEL_6",
        "GLARE_CONFIDENCE_LEVEL_7"
      ],
      "default": "GLARE_CONFIDENCE_LEVEL_NO_GLARE",
      "description": "- GLARE_CONFIDENCE_LEVEL_NO_GLARE: GLARE_CONFIDENCE_LEVEL_NO_GLARE - model is confident that there is minimal or no blur in the document image\n - GLARE_CONFIDENCE_LEVEL_1: GLARE_CONFIDENCE_LEVEL_1 - (and all levels above) can be interpreted as \"glare\"\n - GLARE_CONFIDENCE_LEVEL_2: GLARE_CONFIDENCE_LEVEL_2\n - GLARE_CONFIDENCE_LEVEL_3: GLARE_CONFIDENCE_LEVEL_3\n - GLARE_CONFIDENCE_LEVEL_4: GLARE_CONFIDENCE_LEVEL_4\n - GLARE_CONFIDENCE_LEVEL_5: GLARE_CONFIDENCE_LEVEL_5\n - GLARE_CONFIDENCE_LEVEL_6: GLARE_CONFIDENCE_LEVEL_6\n - GLARE_CONFIDENCE_LEVEL_7: GLARE_CONFIDENCE_LEVEL_7",
      "title": "Glare Confidence Level Enum"
    },
    "v1ImageChecks": {
      "type": "object",
      "properties": {
        "imageQualityResult": {
          "title": "Image quality result, checking for blur, glare and hand over document\nIf image quality checks were NOT performed, this field is not set",
          "allOf": [
            {
              "$ref": "#/definitions/v1ImageQualityResult"
            }
          ]
        },
        "liveness": {
          "title": "Liveness result, if liveness checks were NOT performed, this field is not set",
          "allOf": [
            {
              "$ref": "#/definitions/v1Liveness"
            }
          ]
        },
        "digitalTempering": {
          "title": "Check result for digital tampering",
          "allOf": [
            {
              "$ref": "#/definitions/v1DigitalTemperingCheck"
            }
          ]
        }
      },
      "title": "Result of performing checks on input image"
    },
    "v1ImageQualityResult": {
      "type": "object",
      "properties": {
        "blurConfidenceLevel": {
          "title": "Blur Confidence Level, starts with level 0 that can be interpreted as \"no blur\"\nLevel 1 and above can be interpreted as \"blur\". The higher the level it means that is a higher\nconfidence in the model prediction",
          "allOf": [
            {
              "$ref": "#/definitions/v1BlurConfidenceLevel"
            }
          ]
        },
        "glareConfidenceLevel": {
          "title": "Glare Confidence Level, starts with level 0 that can be interpreted as \"no glare\"\nLevel 1 and above can be interpreted as \"glare\". The higher the level it means that is a higher\nconfidence in the model prediction",
          "allOf": [
            {
              "$ref": "#/definitions/v1GlareConfidenceLevel"
            }
          ]
        },
        "handPercentageOverDocument": {
          "type": "integer",
          "format": "int32",
          "title": "hand_percentage_over_document ranges from 0 to 100"
        }
      },
      "title": "Image Quality Result Message"
    },
    "v1Liveness": {
      "type": "object",
      "properties": {
        "photocopy": {
          "description": "PHOTOCOPY_CONFIDENCE_NOT_PHOTOCOPY means that the input image is likely not a photocopy.\nLevel 1 and higher can be interpreted as \"photocopy\", the higher the level the higher the confidence in the model\nprediction.\nUsing lower levels to detect photocopies will yield higher recall (i.e. you are less likely to \"miss\" a photocopy)\nbut at the cost of lower precision (i.e. you are more likely to detect a non-photocopy as a photocopy).\nIf you are looking for higher precision, use higher levels to detect photocopies.",
          "allOf": [
            {
              "$ref": "#/definitions/v1PhotocopyConfidenceLevel"
            }
          ]
        },
        "screen": {
          "description": "SCREEN_CONFIDENCE_NOT_SCREEN means that the input image is likely not a screen\nLevel 1 and higher can be interpreted as \"screen\", the higher the level the higher the confidence in the model\nprediction\nUsing lower levels to detect screens will yield higher recall (i.e. you are less likely to \"miss\" a screen)\nbut at the cost of lower precision (i.e. you are more likely to detect a non-screen as a screen).\nIf you are looking for higher precision, use higher levels to detect screens.",
          "allOf": [
            {
              "$ref": "#/definitions/v1ScreenConfidenceLevel"
            }
          ]
        }
      },
      "title": "Updated Liveness message using confidence levels"
    },
    "v1MatchCheck": {
      "type": "string",
      "enum": [
        "MATCH_CHECK_NOT_PERFORMED",
        "MATCH_CHECK_MATCHED",
        "MATCH_CHECK_MISSMATCH"
      ],
      "default": "MATCH_CHECK_NOT_PERFORMED",
      "description": "- MATCH_CHECK_NOT_PERFORMED: MATCH_CHECK_NOT_PERFORMED means that the match check was not performed\n - MATCH_CHECK_MATCHED: MATCH_CHECK_MATCHED data check was performed and matched\n - MATCH_CHECK_MISSMATCH: MATCH_CHECK_MISSMATCH data check was performed and did not match",
      "title": "MatchCheck enum"
    },
    "v1MrzCheck": {
      "type": "object",
      "properties": {
        "notValid": {
          "type": "boolean",
          "title": "MRZ if found, decoded but not valid. This indicates serious validity issues with the document"
        },
        "missing": {
          "type": "boolean",
          "title": "MRZ should be present on the document, but was not found"
        }
      },
      "title": "Checks for MRZ the document"
    },
    "v1PhotocopyConfidenceLevel": {
      "type": "string",
      "enum": [
        "PHOTOCOPY_CONFIDENCE_NOT_PHOTOCOPY",
        "PHOTOCOPY_CONFIDENCE_LEVEL_1",
        "PHOTOCOPY_CONFIDENCE_LEVEL_2",
        "PHOTOCOPY_CONFIDENCE_LEVEL_3",
        "PHOTOCOPY_CONFIDENCE_LEVEL_4",
        "PHOTOCOPY_CONFIDENCE_LEVEL_5",
        "PHOTOCOPY_CONFIDENCE_LEVEL_6",
        "PHOTOCOPY_CONFIDENCE_LEVEL_7"
      ],
      "default": "PHOTOCOPY_CONFIDENCE_NOT_PHOTOCOPY",
      "description": "Photocopy Confidence Level Enum\nPHOTOCOPY_CONFIDENCE_NOT_PHOTOCOPY means that the input image is likely not a photocopy.\nLevel 1 and higher can be interpreted as \"photocopy\", the higher the level the higher the confidence in the model\nprediction.\nUsing lower levels to detect photocopies will yield higher recall (i.e. you are less likely to \"miss\" a photocopy)\nbut at the cost of lower precision (i.e. you are more likely to detect a non-photocopy as a photocopy).\nIf you are looking for higher precision, use higher levels to detect photocopies.\n\n - PHOTOCOPY_CONFIDENCE_NOT_PHOTOCOPY: PHOTOCOPY_CONFIDENCE_LEVEL_0\n - PHOTOCOPY_CONFIDENCE_LEVEL_1: PHOTOCOPY_CONFIDENCE_LEVEL_1\n - PHOTOCOPY_CONFIDENCE_LEVEL_2: PHOTOCOPY_CONFIDENCE_LEVEL_2\n - PHOTOCOPY_CONFIDENCE_LEVEL_3: PHOTOCOPY_CONFIDENCE_LEVEL_3\n - PHOTOCOPY_CONFIDENCE_LEVEL_4: PHOTOCOPY_CONFIDENCE_LEVEL_4\n - PHOTOCOPY_CONFIDENCE_LEVEL_5: PHOTOCOPY_CONFIDENCE_LEVEL_5\n - PHOTOCOPY_CONFIDENCE_LEVEL_6: PHOTOCOPY_CONFIDENCE_LEVEL_6\n - PHOTOCOPY_CONFIDENCE_LEVEL_7: PHOTOCOPY_CONFIDENCE_LEVEL_7"
    },
    "v1ScreenConfidenceLevel": {
      "type": "string",
      "enum": [
        "SCREEN_CONFIDENCE_NOT_SCREEN",
        "SCREEN_CONFIDENCE_LEVEL_1",
        "SCREEN_CONFIDENCE_LEVEL_2",
        "SCREEN_CONFIDENCE_LEVEL_3",
        "SCREEN_CONFIDENCE_LEVEL_4",
        "SCREEN_CONFIDENCE_LEVEL_5",
        "SCREEN_CONFIDENCE_LEVEL_6",
        "SCREEN_CONFIDENCE_LEVEL_7"
      ],
      "default": "SCREEN_CONFIDENCE_NOT_SCREEN",
      "description": "Screen Confidence Level Enum\nSCREEN_CONFIDENCE_NOT_SCREEN means that the input image is likely not a screen\nLevel 1 and higher can be interpreted as \"screen\", the higher the level the higher the confidence in the model\nprediction.\nUsing lower levels to detect screens will yield higher recall (i.e. you are less likely to \"miss\" a screen)\nbut at the cost of lower precision (i.e. you are more likely to detect a non-screen as a screen).\nIf you are looking for higher precision, use higher levels to detect screens.\n\n - SCREEN_CONFIDENCE_NOT_SCREEN: SCREEN_CONFIDENCE_NOT_SCREEN\n - SCREEN_CONFIDENCE_LEVEL_1: SCREEN_CONFIDENCE_LEVEL_1\n - SCREEN_CONFIDENCE_LEVEL_2: SCREEN_CONFIDENCE_LEVEL_2\n - SCREEN_CONFIDENCE_LEVEL_3: SCREEN_CONFIDENCE_LEVEL_3\n - SCREEN_CONFIDENCE_LEVEL_4: SCREEN_CONFIDENCE_LEVEL_4\n - SCREEN_CONFIDENCE_LEVEL_5: SCREEN_CONFIDENCE_LEVEL_5\n - SCREEN_CONFIDENCE_LEVEL_6: SCREEN_CONFIDENCE_LEVEL_6\n - SCREEN_CONFIDENCE_LEVEL_7: SCREEN_CONFIDENCE_LEVEL_7"
    },
    "v1TextFieldCheck": {
      "type": "object",
      "properties": {
        "type": {
          "title": "The type of the text field",
          "allOf": [
            {
              "$ref": "#/definitions/v1TextFieldType"
            }
          ]
        },
        "checks": {
          "title": "The checks for the text field",
          "allOf": [
            {
              "$ref": "#/definitions/v1Checks"
            }
          ]
        }
      }
    },
    "v1TextFieldType": {
      "type": "string",
      "enum": [
        "TYPE_FIRST_NAME",
        "TYPE_LAST_NAME",
        "TYPE_NATIONALITY",
        "TYPE_DOCUMENT_IDENTITY_NUMBER",
        "TYPE_ISSUING_AUTHORITY",
        "TYPE_ADDRESS",
        "TYPE_PERSONAL_IDENTITY_NUMBER",
        "TYPE_MARITAL_STATUS",
        "TYPE_EXTENDED_ADDRESS",
        "TYPE_EXTENDED_ADDRESS_SPECIFICS",
        "TYPE_CLASS",
        "TYPE_CONDITIONS",
        "TYPE_ENDORSEMENTS",
        "TYPE_DRIVERS_LICENSE_TYPE",
        "TYPE_FULL_NAME",
        "TYPE_PLACE_OF_BIRTH",
        "TYPE_PROFESSION",
        "TYPE_EMPLOYER",
        "TYPE_EXTENDED_NAME",
        "TYPE_FATHERS_NAME",
        "TYPE_MOTHERS_NAME",
        "TYPE_RACE",
        "TYPE_RESIDENTIAL_TYPE",
        "TYPE_RESTRICTIONS",
        "TYPE_BLOOD_TYPE",
        "TYPE_NUMBER"
      ],
      "default": "TYPE_FIRST_NAME",
      "description": "Type - an enum specifying field type. Eg. \"First name\", \"Last name\", \"Address\", etc.\n\n - TYPE_FIRST_NAME: Represents the first name of an individual\n - TYPE_LAST_NAME: Represents the last name of an individual\n - TYPE_NATIONALITY: Represents the nationality of an individual\n - TYPE_DOCUMENT_IDENTITY_NUMBER: Represents the unique number assigned to a document\n - TYPE_ISSUING_AUTHORITY: Represents the authority that issued a document\n - TYPE_ADDRESS: Represents the address of an individual\n - TYPE_PERSONAL_IDENTITY_NUMBER: Represents a unique personal identification number, such as OIB\n - TYPE_MARITAL_STATUS: Represents the marital status of an individual\n - TYPE_EXTENDED_ADDRESS: Represents additional information about an address\n - TYPE_EXTENDED_ADDRESS_SPECIFICS: Represents additional information about an address (second part)\n - TYPE_CLASS: Represents a classification or category\n - TYPE_CONDITIONS: Represents conditions or restrictions\n - TYPE_ENDORSEMENTS: Represents endorsements or special permissions\n - TYPE_DRIVERS_LICENSE_TYPE: Represents the type of licence or permit\n - TYPE_FULL_NAME: Represents the full name of an individual\n - TYPE_PLACE_OF_BIRTH: Represents the place of birth of an individual\n - TYPE_PROFESSION: Represents the profession or occupation of an individual\n - TYPE_EMPLOYER: Represents the employer of an individual\n - TYPE_EXTENDED_NAME: Represents additional information about a name\n - TYPE_FATHERS_NAME: Represents the father's name of an individual\n - TYPE_MOTHERS_NAME: Represents the mother's name of an individual\n - TYPE_RACE: Represents the race or ethnicity of an individual\n - TYPE_RESIDENTIAL_TYPE: Represents the residential status of an individual\n - TYPE_RESTRICTIONS: Represents restrictions or limitations\n - TYPE_BLOOD_TYPE: Represents the blood type of an individual\n - TYPE_NUMBER: Represents an additional numbers/codes that can appear on some documents"
    },
    "v1VerificationRequest": {
      "type": "object",
      "properties": {
        "firstImage": {
          "type": "string",
          "format": "byte",
          "title": "First image - required"
        },
        "secondImage": {
          "type": "string",
          "format": "byte",
          "title": "Second image - optional, if performing a check of a one sided document this field is not required"
        }
      },
      "title": "Verification request"
    },
    "v1VerificationResult": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the verification, we expect to have one or two images in the input request, and these images\nare expected to be front and back sides of the SAME document. If it is a \"one sided document\" (e.g. most passports)\nthen only one image is expected in the input request. If it is a \"two sided document\" (e.g. most ID cards)\nthen two images are expected in the input request. If verification process was successfully performed\nthe status will be STATUS_OK. For the case of two sided document status will be STATUS_OK if we successfully\nrecognized both sides of the document. If back side is not recognized STATUS_MISSING_BACK_SIDE is returned, if\nfront side is not recognized STATUS_MISSING_FRONT_SIDE is returned. In the case of the \"one sided document\" the\nstatus will be STATUS_OK if we successfully recognized the document and STATUS_DOCUMENT_RECOGNITION_FAILED\notherwise.",
          "allOf": [
            {
              "$ref": "#/definitions/v1VerificationResultStatus"
            }
          ]
        },
        "firstImage": {
          "title": "Holds ImageChecks of the first image IF document was recognized\nIf document wasn't recognized this field is not set",
          "allOf": [
            {
              "$ref": "#/definitions/v1ImageChecks"
            }
          ]
        },
        "secondImage": {
          "title": "Holds ImageChecks of the second image IF document was recognized\nIf document wasn't recognized this field is not set",
          "allOf": [
            {
              "$ref": "#/definitions/v1ImageChecks"
            }
          ]
        },
        "dataCheck": {
          "title": "Data check result",
          "allOf": [
            {
              "$ref": "#/definitions/v1DataCheck"
            }
          ]
        }
      },
      "title": "Verification result"
    },
    "v1VerificationResultStatus": {
      "type": "string",
      "enum": [
        "STATUS_OK",
        "STATUS_DOCUMENT_RECOGNITION_FAILED",
        "STATUS_MISSING_BACK_SIDE",
        "STATUS_MISSING_FRONT_SIDE"
      ],
      "default": "STATUS_OK",
      "description": "- STATUS_OK: Verification performed successfully\n - STATUS_DOCUMENT_RECOGNITION_FAILED: Failed to recognize the document in the given images\n - STATUS_MISSING_BACK_SIDE: Found front side of the document but missing back side\n - STATUS_MISSING_FRONT_SIDE: Found back side of the document but missing front side",
      "title": "Status enum"
    },
    "v1VisualFieldCheck": {
      "type": "object",
      "properties": {
        "type": {
          "title": "The type of the visual field",
          "allOf": [
            {
              "$ref": "#/definitions/v1VisualFieldType"
            }
          ]
        },
        "checks": {
          "title": "The checks for the visual field",
          "allOf": [
            {
              "$ref": "#/definitions/v1Checks"
            }
          ]
        }
      }
    },
    "v1VisualFieldType": {
      "type": "string",
      "enum": [
        "TYPE_FACE_PHOTO",
        "TYPE_SIGNATURE"
      ],
      "default": "TYPE_FACE_PHOTO",
      "description": "Type - an enum specifying field types that are visual fields.\neg. \"Face photo\", \"Signature\", etc.\n\n - TYPE_FACE_PHOTO: Face photo\n - TYPE_SIGNATURE: Signature"
    }
  }
}
